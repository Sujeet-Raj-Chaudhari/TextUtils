{"version":3,"sources":["Alert.js","Components/Navbar.js","Components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","type","msg","Navbar","mode","href","title","id","aboutText","style","borderRadius","height","width","onClick","toggleTheme","toggleMode","htmlFor","Textform","useState","text","setText","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","split","filter","element","length","defaultProps","App","setMode","setAlert","message","setTimeout","removeBodyClasses","document","body","classList","remove","cls","add","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMAeeA,MAbf,SAAeC,GAKX,OACIA,EAAMC,OAAS,sBAAKC,UAAU,kDAAkDC,KAAK,QAAtE,UACZ,iCANY,SAACC,GAChB,IAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,GAIvCC,CAAWV,EAAMC,MAAMU,QADpB,KACsCX,EAAMC,MAAMW,IAC7D,wBAAQD,KAAK,SAAST,UAAU,YAAY,kBAAgB,QAAQ,aAAW,c,MCL5E,SAASW,EAAOb,GAC3B,OACI,8BACK,qBAAKE,UAAS,yCAAsCF,EAAMc,KAA5C,eAAuDd,EAAMc,MAA3E,SACL,sBAAKZ,UAAY,kBAAjB,UACE,mBAAGA,UAAY,eAAea,KAAO,IAArC,SAA0Cf,EAAMgB,QAChD,wBAAQd,UAAY,iBAAiBS,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA9L,SACE,sBAAMT,UAAY,0BAEpB,sBAAKA,UAAY,2BAA2Be,GAAG,yBAA/C,UACE,qBAAIf,UAAY,kCAAhB,UACE,oBAAIA,UAAY,WAAhB,SACE,mBAAGA,UAAY,kBAAkB,eAAa,OAAOa,KAAM,IAA3D,oBAEF,oBAAIb,UAAY,WAAhB,SACE,mBAAGA,UAAY,WAAWa,KAAM,IAAhC,SAAqCf,EAAMkB,iBAI/C,sBAAKhB,UAAU,SAAf,UACA,wBAAQA,UAAU,sBAAsBiB,MAAO,CAACC,aAAc,OAAQC,OAAQ,OAAQC,MAAO,QAAUC,QAAW,WAAKvB,EAAMwB,YAAY,WAAYb,KAAK,WAC1J,wBAAQT,UAAU,uBAAuBiB,MAAO,CAACC,aAAc,OAAQC,OAAQ,OAAQC,MAAO,QAAUC,QAAW,WAAKvB,EAAMwB,YAAY,YAAab,KAAK,WAC5J,wBAAQT,UAAU,uBAAuBiB,MAAO,CAACC,aAAc,OAAQC,OAAQ,OAAQC,MAAO,QAAUC,QAAW,WAAKvB,EAAMwB,YAAY,YAAab,KAAK,cAE5J,sBAAKT,UAAS,sCAAgD,UAAfF,EAAMc,KAAmB,OAAS,SAAjF,UACE,uBAAOZ,UAAU,mBAAmBqB,QAAW,WAAKvB,EAAMyB,WAAWzB,EAAMc,OAAQH,KAAK,WAAWM,GAAG,2BACtG,uBAAOf,UAAU,mBAAmBwB,QAAQ,yBAA5C,0CC7BC,SAASC,EAAS3B,GAC7B,IAqBA,EAAwB4B,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,qCACA,sBAAK5B,UAAY,YAAYiB,MAAQ,CAACY,MAAsB,SAAf/B,EAAMc,KAAkB,QAAU,SAA/E,UACI,6BAAKd,EAAMgC,UACX,qBAAK9B,UAAU,OAAf,SACI,0BAAU+B,MAASJ,EAAMK,SAXd,SAACC,GACpBL,EAAQK,EAAMC,OAAOH,QAUwCd,MAAQ,CAACkB,gBAAiC,SAAfrC,EAAMc,KAAkB,OAAS,QAAUiB,MAAsB,SAAf/B,EAAMc,KAAkB,QAAU,SAAWZ,UAAY,eAAee,GAAK,QAAQqB,KAAO,QAEnO,wBAAQpC,UAAU,sBAAsBqB,QA9BzB,WAElB,IAAIgB,EAAUV,EAAKrB,cAEnBsB,EAAQS,GACRvC,EAAMwC,UAAU,yBAA0B,YAyBvC,kCACA,wBAAQtC,UAAU,sBAAsBqB,QAxBzB,WAElB,IAAIgB,EAAUV,EAAKvB,cAEnBwB,EAAQS,IAoBL,kCACA,wBAAQrC,UAAU,sBAAsBqB,QAnBxB,SAACY,GACpBL,EAAQ,KAkBL,mCAEH,sBAAK5B,UAAU,YAAYiB,MAAQ,CAACY,MAAsB,SAAf/B,EAAMc,KAAkB,QAAU,SAA7E,UACI,mDACA,8BAAIe,EAAKY,MAAM,KAAKC,QAAO,SAACC,GAAa,OAA0B,IAAnBA,EAAQC,UAAeA,OAAvE,cAA0Ff,EAAKe,OAA/F,iBACA,8BAAI,KAAQf,EAAKY,MAAM,KAAKG,OAA5B,gCACA,yCACA,4BAAIf,EAAKe,OAAS,EAAIf,EAAO,0CDGzChB,EAAOgC,aAAe,CAClB7B,MAAO,gBACPE,UAAY,oBEkCD4B,MAlEf,WACE,MAAuBlB,mBAAS,SAAhC,mBAAMd,EAAN,KAAYiC,EAAZ,KACA,EAAyBnB,mBAAS,MAAlC,mBAAM3B,EAAN,KAAa+C,EAAb,KAEMR,EAAY,SAACS,EAAStC,GAC1BqC,EAAS,CACPpC,IAAKqC,EACLtC,KAAOA,IAGTuC,YAAW,WACTF,EAAS,QACR,MAECG,EAAoB,WACxBC,SAASC,KAAKC,UAAUC,OAAO,YAC/BH,SAASC,KAAKC,UAAUC,OAAO,WAC/BH,SAASC,KAAKC,UAAUC,OAAO,cAC/BH,SAASC,KAAKC,UAAUC,OAAO,aAC/BH,SAASC,KAAKC,UAAUC,OAAO,cAC/BH,SAASC,KAAKC,UAAUC,OAAO,OAyBjC,OACE,qCAEE,cAAC1C,EAAD,CAAQG,MAAQ,YAAYF,KAAQA,EAAMW,WA1B3B,SAAC+B,GAClBL,IACAC,SAASC,KAAKC,UAAUG,IAAI,MAChB,UAAT3C,GAED4C,QAAQC,IAAIH,GACZT,EAAQ,QACRK,SAASC,KAAKlC,MAAMkB,gBAAkB,UACtCG,EAAU,4BAA6B,WACvCY,SAASpC,MAAQ,4BAGjB+B,EAAQ,SACRK,SAASC,KAAKlC,MAAMkB,gBAAkB,QACtCG,EAAU,6BAA8B,aAY6BhB,YARtD,SAACgC,GAClBL,IACAO,QAAQC,IAAIH,GACZJ,SAASC,KAAKC,UAAUG,IAAI,MAAMD,MAMhC,cAAC,EAAD,CAAOvD,MAASA,IAChB,qBAAKC,UAAU,iBAAf,SAME,cAAC,EAAD,CAAUsC,UAAaA,EAAWR,QAAU,4BAA4BlB,KAAQA,UC3DzE8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,SAM1BZ,K","file":"static/js/main.ab01ac31.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n             <nav className = {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className = \"container-fluid\">\r\n          <a className = \"navbar-brand\" href = \"#\">{props.title}</a>\r\n          <button className = \"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className = \"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className = \"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className = \"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className = \"nav-item\">\r\n                <a className = \"nav-link active\" aria-current=\"page\" href= \"#\">Home</a>\r\n              </li>\r\n              <li className = \"nav-item\">\r\n                <a className = \"nav-link\" href= \"#\">{props.aboutText}</a>\r\n              </li>\r\n            </ul>\r\n            \r\n            <div className=\"d-flex\">\r\n            <button className=\"btn btn-danger mx-1\" style={{borderRadius: \"50px\", height: \"25px\", width: \"25px\"}}  onClick = {()=>{props.toggleTheme('danger')}} type=\"button\"  ></button>\r\n            <button className=\"btn btn-success mx-1\" style={{borderRadius: \"50px\", height: \"25px\", width: \"25px\"}}  onClick = {()=>{props.toggleTheme('success')}} type=\"button\"  ></button>\r\n            <button className=\"btn btn-warning mx-1\" style={{borderRadius: \"50px\", height: \"25px\", width: \"25px\"}}  onClick = {()=>{props.toggleTheme('warning')}} type=\"button\"  ></button>\r\n            </div>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick = {()=>{props.toggleMode(props.mode)}} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set the title\",\r\n    aboutText : \"Write about text\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = () =>{\r\n        //console.log(\"Uppercase was clicked \"+ text);\r\n        let newText = text.toUpperCase();\r\n\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\")\r\n    }\r\n    const handleLoClick = () =>{\r\n        //console.log(\"LowerCase was clicked \"+ text);\r\n        let newText = text.toLowerCase();\r\n\r\n        setText(newText);\r\n    }\r\n    const handleClrClick = (event) =>{\r\n        setText(\"\");\r\n    }\r\n    \r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n   \r\n    const [text, setText] = useState('');\r\n    \r\n    return (\r\n        <>\r\n        <div className = \"container\" style ={{color: props.mode === 'dark' ? 'white' : 'black'}} >\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea value = {text} onChange = {handleOnChange} style ={{backgroundColor : props.mode === 'dark' ? 'grey' : 'white' , color: props.mode === 'dark' ? 'white' : 'black'}}  className = \"form-control\" id = \"myBox\" rows = \"8\"></textarea>\r\n            </div>\r\n           <button className=\"bt btn-primary mx-3\" onClick = {handleUpClick}>Convert to UpperCase</button>\r\n           <button className=\"bt btn-primary mx-3\" onClick = {handleLoClick}>Convert to LowerCase</button>\r\n           <button className=\"bt btn-primary mx-3\" onClick = {handleClrClick}>Clear the text Box</button>\r\n        </div>\r\n        <div className=\"container\" style ={{color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <h2>Your Text summary</h2>\r\n            <p>{text.split(\" \").filter((element) => {return element.length !== 0}).length} words and {text.length} characetrs</p>\r\n            <p>{0.008 * text.split(\" \").length}minutes to read above text</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length > 0 ? text : \"Enter Something to preview here\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","\nimport { useState } from 'react';\nimport Alert from './Alert';\nimport './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\n\nimport TextForm from'./Components/Textform';\n\n{/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n*/}\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg: message,\n      type : type\n    })\n\n    setTimeout(() =>{\n      setAlert(null);\n    }, 2000);\n  }\n  const removeBodyClasses = () =>{\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg');\n  }\n  const toggelMode = (cls)=>{\n    removeBodyClasses();\n    document.body.classList.add('bg');\n    if(mode === 'light')\n    {\n      console.log(cls);\n      setMode('dark');\n      document.body.style.backgroundColor = '#086683';\n      showAlert(\"DarkMode has been enabled\", \"success\");\n      document.title = 'TextUtils-Home-DarkMode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"LightMode has been enabled\", \"success\");\n    }\n  }\n\n  const toggleTheme =(cls)=>{\n    removeBodyClasses();\n    console.log(cls);\n    document.body.classList.add('bg-'+cls);\n  }\n  return (\n    <>\n    {/*<Router>*/}\n      <Navbar title = \"TextUtils\" mode = {mode} toggleMode = {toggelMode}  toggleTheme = {toggleTheme}/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n      {/*<Switch>\n        <Route exact path=\"/about\">\n          <About/>\n        </Route>\n    <Route exact path=\"/\">*/}\n        <TextForm showAlert = {showAlert} heading = \"Enter the Text To Analyze\" mode = {mode} />\n        {/*</Route>\n      </Switch>*/}\n      \n      </div>\n    {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}